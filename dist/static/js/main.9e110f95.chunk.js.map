{"version":3,"sources":["assets/images/magnify-glass.svg","assets/images/map-pinter-icon.svg","state/slices/results.slice.js","axios/baseUrl.js","components/logo/logo.component.js","components/results-count/results-count.component.js","state/slices/queries.slice.js","components/search/search.component.js","pages/landing/landing.component.js","components/job/job.component.js","pages/serp/serp.component.js","pages/404/404.component.js","App.js","reportWebVitals.js","state/store.js","index.js"],"names":["module","exports","__webpack_require__","p","resultsSlice","createSlice","name","initialState","total","jobs","reducers","updateTotal","state","action","payload","updateJobs","concat","Object","toConsumableArray","actions","baseUrl","axios","create","baseURL","Logo","react_default","a","createElement","className","href","ResultsCount","_ref","count","search","queriesSlice","city","company","country","page","q","updateCity","updateCompany","updateCpuntry","updatePage","updateQ","Search","query","useSelector","queries","dispatch","useDispatch","navigate","useNavigate","src","magnifyGlass","alt","onClick","type","placeholder","onChange","e","target","value","LandingPage","results","onKeyDown","key","logo_component","search_component","results_count_component","Job","title","link","isNew","mapPointerIcon","Serp","job_component","Error404","App","get","then","response","data","react_router_dom","react_router","path","element","landing_component","serp_component","_404_component","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","store","src_App_0"],"mappings":"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","file":"static/js/main.9e110f95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/magnify-glass.57b4ba36.svg\";","module.exports = __webpack_public_path__ + \"static/media/map-pinter-icon.1bf83b83.svg\";","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const resultsSlice = createSlice({\r\n  name: 'results',\r\n  initialState: {\r\n    total: 0,\r\n    jobs: [], // array of objects, step 10\r\n  },\r\n  reducers: {\r\n    updateTotal: (state, action) => {\r\n      state.total = action.payload;\r\n    },\r\n    updateJobs: (state, action) => {\r\n      state.jobs = [...state.jobs, ...action.payload];\r\n    },\r\n  }\r\n});\r\n\r\nexport const { updateTotal, updateJobs } = resultsSlice.actions;\r\nexport default resultsSlice.reducer;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = axios.create({ baseURL: 'https://api.peviitor.ro/v3/' });\r\n\r\nexport default baseUrl;","import React from 'react';\r\nimport './logo.style.scss';\r\n\r\nconst Logo = () => {\r\n\r\n  return (\r\n    <section className='logo'>\r\n      <h1 className='text'><a href='./'>pe viitor</a></h1>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './results-count.style.scss';\r\n\r\nconst ResultsCount = ({ count, search }) => {\r\n\r\n  return (\r\n    <section className={`results-count ${count ? '' : 'hide'}`}>\r\n      <p className='text'>Avem <span className='count'>{count}</span> de oportuinitatis in Romania {search ? `pentru ${search}` : ''}</p>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ResultsCount;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const queriesSlice = createSlice({\r\n  name: 'queries',\r\n  initialState: {\r\n    city: '',\r\n    company: '',\r\n    country: '',\r\n    page: 1,\r\n    q: ''\r\n  },\r\n  reducers: {\r\n    updateCity: (state, action) => {\r\n      state.city = action.payload;\r\n    },\r\n    updateCompany: (state, action) => {\r\n      state.company = action.payload;\r\n    },\r\n    updateCpuntry: (state, action) => {\r\n      state.country = action.payload;\r\n    },\r\n    updatePage: (state, action) => {\r\n      state.page = action.payload;\r\n    },\r\n    updateQ: (state, action) => {\r\n      state.q = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { updateCity, updateCompany, updateCpuntry, updateQ, updatePage } = queriesSlice.actions;\r\nexport default queriesSlice.reducer;\r\n","import React from 'react';\r\nimport './search.style.scss';\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateQ } from '../../state/slices/queries.slice';\r\n\r\nimport magnifyGlass from '../../assets/images/magnify-glass.svg';\r\n\r\nconst Search = () => {\r\n  const query = useSelector(state => state.queries.q);\r\n  const dispatch = useDispatch();\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const onChange = (e) => {\r\n    dispatch(updateQ(e.target.value));\r\n  }\r\n\r\n  return (\r\n    <section className='search'>\r\n      <img src={magnifyGlass} alt='' className='image' onClick={() => navigate(\"/rezultate\")} />\r\n      <input type='text' placeholder='Ce vrei să te faci când vei fi mare?' onChange={onChange} value={query} />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport './landing.style.scss';\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Logo from '../../components/logo/logo.component';\r\nimport ResultsCount from '../../components/results-count/results-count.component';\r\nimport Search from '../../components/search/search.component';\r\n\r\nconst LandingPage = () => {\r\n  let navigate = useNavigate();\r\n  const count = useSelector((state) => state.results.total);\r\n\r\n  const onEnterPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      navigate(\"/rezultate\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className='landing-page' onKeyDown={onEnterPress}>\r\n      <section className='content'>\r\n        <Logo />\r\n        <Search />\r\n        <ResultsCount count={count} />\r\n      </section>\r\n    </section>\r\n  )\r\n};\r\n\r\nexport default LandingPage;","import React from 'react';\r\nimport './job.style.scss';\r\n\r\nimport mapPointerIcon from '../../assets/images/map-pinter-icon.svg';\r\n\r\nconst Job = ({ company, city, title, link, isNew }) => {\r\n\r\n  return (\r\n    <section className='job'>\r\n      <section className={`new ${isNew ? '' : 'hide'}`}>Nou</section>\r\n      <section className='description'>\r\n        <section className='details'>\r\n          <section className='company'>Company</section>\r\n          <section className='section'>\r\n            <section className='title'>Title of a job that is job</section>\r\n            <section className='location'><img src={mapPointerIcon} /> Location longer</section>\r\n          </section>\r\n          <section className='url'>https://peviitor.ro/dream-job-of-best-jobs-you-can-dream</section>\r\n        </section>\r\n        <section className='type'>full-tite | mid</section>\r\n        <button className='btn'>Vezi jobul</button>\r\n      </section>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Job;","import React from 'react';\r\nimport './serp.style.scss';\r\n\r\nimport Logo from '../../components/logo/logo.component';\r\nimport Search from '../../components/search/search.component';\r\nimport Results from '../../components/results-count/results-count.component';\r\nimport Job from '../../components/job/job.component';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst Serp = () => {\r\n  const q = useSelector(state => state.queries.q);\r\n  const count = useSelector(state => state.results.total);\r\n\r\n\r\n  return (\r\n    <section className='serp'>\r\n      <header>\r\n        <Logo />\r\n        <Search />\r\n      </header>\r\n      <section className='serp__content'>\r\n        <aside className='serp__content__aside'>\r\n          this is some menu\r\n        </aside>\r\n        <section className='serp__content__results'>\r\n          <Results count={count} search={q} />\r\n          <Job isNew={true} />\r\n          <Job isNew={true} />\r\n          <Job />\r\n        </section>\r\n      </section>\r\n    </section>\r\n  )\r\n};\r\n\r\nexport default Serp;","import React from 'react';\r\nimport './404.style.scss';\r\n\r\nconst Error404 = () => (\r\n  <section>\r\n    Cineva o sa aiba probleme!!!\r\n  </section>\r\n);\r\n\r\nexport default Error404;","import React from 'react';\r\nimport './App.scss';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateTotal } from './state/slices/results.slice';\r\n\r\nimport baseUrl from './axios/baseUrl';\r\n\r\nimport LandingPage from './pages/landing/landing.component';\r\nimport Serp from './pages/serp/serp.component';\r\nimport Error404 from './pages/404/404.component';\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  baseUrl.get('total/')\r\n    .then((response) => {\r\n      dispatch(updateTotal(response.data.total.jobs));\r\n    })\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<LandingPage />} />\r\n        <Route path=\"rezultate\" element={<Serp />} />\r\n        <Route path=\"*\" element={<Error404 />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport queriesSlice from './slices/queries.slice';\r\nimport resultsSlice from './slices/results.slice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    queries: queriesSlice,\r\n    results: resultsSlice\r\n  }\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './state/store';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}