{"version":3,"sources":["assets/images/magnify-glass.svg","assets/images/map-pinter-icon.svg","components/logo/logo.component.js","components/results-count/results-count.component.js","state/slices/queries.slice.js","components/search/search.component.js","helpers/createQueryString.js","helpers/handleClick.js","axios/baseUrl.js","state/slices/results.slice.js","pages/landing/landing.component.js","components/job/job.component.js","pages/serp/serp.component.js","helpers/mapJobsResults.js","pages/404/404.component.js","App.js","reportWebVitals.js","state/store.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","react_default","a","createElement","className","react_router_dom","to","ResultsCount","_ref","count","search","concat","queriesSlice","createSlice","name","initialState","city","company","country","page","q","reducers","updateCity","state","action","payload","updateCompany","updateCountry","updatePage","updateQ","actions","Search","onClickPress","query","useSelector","queries","dispatch","useDispatch","src","magnifyGlass","alt","onClick","type","placeholder","onChange","e","target","value","createQueryString","data","Object","entries","filter","map","join","handleClick","navigate","pathname","baseUrl","axios","create","baseURL","resultsSlice","querySearched","total","jobs","updateTotal","getNewJobs","toConsumableArray","updateJobs","updateQuerySearched","LandingPage","useNavigate","results","useEffect","get","then","response","onKeyDown","key","logo_component","search_component","results_count_component","Job","title","link","isNew","mapPointerIcon","rel","href","Serp","searchParams","useSearchParams","content","job","idx","job_component","assign","paramsQuery","jobsMapped","length","forEach","push","job_title","job_link","mapJobsResults","docs","numFound","Error404","App","react_router","path","element","landing_component","serp_component","_404_component","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","store","src_App_0"],"mappings":"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","file":"static/js/main.8060d22c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/magnify-glass.57b4ba36.svg\";","module.exports = __webpack_public_path__ + \"static/media/map-pinter-icon.1bf83b83.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './logo.style.scss';\r\n\r\nconst Logo = () => {\r\n\r\n  return (\r\n    <section className='logo'>\r\n      <h1><Link to='/' className='text'>pe viitor</Link></h1>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './results-count.style.scss';\r\n\r\nconst ResultsCount = ({ count, search }) => {\r\n\r\n  return (\r\n    <section className={`results-count`}>\r\n      <p className={`text ${count ? '' : 'hide'}`}>Avem <span className='count'>{count}</span> de oportuinitatis in Romania {search ? `pentru ${search}` : ''}</p>\r\n      <p className={`text ${count ? 'hide' : ''}`}>Ceva nu a mers bine...</p>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ResultsCount;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const queriesSlice = createSlice({\r\n  name: 'queries',\r\n  initialState: {\r\n    city: '',\r\n    company: '',\r\n    country: '',\r\n    page: 1,\r\n    q: ''\r\n  },\r\n  reducers: {\r\n    updateCity: (state, action) => {\r\n      state.city = action.payload;\r\n    },\r\n    updateCompany: (state, action) => {\r\n      state.company = action.payload;\r\n    },\r\n    updateCountry: (state, action) => {\r\n      state.country = action.payload;\r\n    },\r\n    updatePage: (state, action) => {\r\n      state.page = action.payload;\r\n    },\r\n    updateQ: (state, action) => {\r\n      state.q = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { updateCity, updateCompany, updateCountry, updateQ, updatePage } = queriesSlice.actions;\r\nexport default queriesSlice.reducer;\r\n","import React from 'react';\r\nimport './search.style.scss';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateQ } from '../../state/slices/queries.slice';\r\n\r\nimport magnifyGlass from '../../assets/images/magnify-glass.svg';\r\n\r\nconst Search = ({ onClickPress }) => {\r\n  const query = useSelector(state => state.queries.q);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const onChange = (e) => {\r\n    dispatch(updateQ(e.target.value));\r\n  }\r\n\r\n  return (\r\n    <section className='search'>\r\n      <img src={magnifyGlass} alt='' className='image' onClick={() => onClickPress()} />\r\n      <input type='text' placeholder='Ce vrei să te faci când vei fi mare?' onChange={onChange} value={query} />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Search;","export const createQueryString = (data) => {\r\n  return Object.entries(data).filter(q => q[1]).map(q => q.join('=')).join('&');\r\n};\r\n","import { createQueryString } from \"./createQueryString\";\r\n\r\nexport const handleClick = (queries, navigate) => {\r\n  const search = createQueryString(queries);\r\n  navigate({ pathname: \"/rezultate\", search });\r\n}","import axios from 'axios';\r\n\r\nexport const baseUrl = axios.create({ baseURL: 'https://api.peviitor.ro/v1/' });\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const resultsSlice = createSlice({\r\n  name: 'results',\r\n  initialState: {\r\n    querySearched: '',\r\n    total: 0,\r\n    jobs: [], // array of objects, step 10\r\n  },\r\n  reducers: {\r\n    updateTotal: (state, action) => {\r\n      state.total = action.payload;\r\n    },\r\n    getNewJobs: (state, action) => {\r\n      state.jobs = [...action.payload];\r\n    },\r\n    updateJobs: (state, action) => {\r\n      state.jobs = [...action.payload];\r\n    },\r\n    updateQuerySearched: (state, action) => {\r\n      state.querySearched = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nexport const { updateTotal, getNewJobs, updateJobs, updateQuerySearched } = resultsSlice.actions;\r\nexport default resultsSlice.reducer;\r\n","import React, { useEffect } from 'react';\r\nimport './landing.style.scss';\r\n\r\nimport Logo from '../../components/logo/logo.component';\r\nimport ResultsCount from '../../components/results-count/results-count.component';\r\nimport Search from '../../components/search/search.component';\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { handleClick } from '../../helpers/handleClick';\r\nimport { baseUrl } from '../../axios/baseUrl';\r\nimport { updateTotal } from '../../state/slices/results.slice';\r\nimport { updateQ } from '../../state/slices/queries.slice';\r\n\r\nconst LandingPage = () => {\r\n  let navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const count = useSelector((state) => state.results.total);\r\n  const queries = useSelector(state => state.queries);\r\n\r\n  useEffect(() => {\r\n    dispatch(updateQ(''));\r\n\r\n    baseUrl.get(`total/`)\r\n      .then((response) => {\r\n        dispatch(updateTotal(response.data.total.jobs));\r\n      })\r\n  }, []);\r\n\r\n\r\n  const onEnterPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleClick(queries, navigate);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className='landing-page' onKeyDown={onEnterPress}>\r\n      <section className='content display-flex'>\r\n        <Logo />\r\n        <section className='animation display-flex'>\r\n          <Search onClickPress={() => handleClick(queries, navigate)} />\r\n          <ResultsCount count={count} />\r\n        </section>\r\n      </section>\r\n    </section>\r\n  )\r\n};\r\n\r\nexport default LandingPage;","import React from 'react';\r\nimport './job.style.scss';\r\n\r\nimport mapPointerIcon from '../../assets/images/map-pinter-icon.svg';\r\n\r\nconst Job = ({ company, city, title, link, isNew }) => {\r\n\r\n  return (\r\n    <article className='job'>\r\n      <section className={`new ${isNew ? '' : 'hide'}`}>Nou</section>\r\n      <section className='description'>\r\n        <section className='details'>\r\n          <section className='company'>{company}</section>\r\n          <section className='section'>\r\n            <section className='title'>{title}</section>\r\n            <section className='location'><img src={mapPointerIcon} alt=\"location-icon\" /> {city}</section>\r\n          </section>\r\n          <section className='url'>{link}</section>\r\n        </section>\r\n        <section className='type'>full-tite | mid</section>\r\n        <a className='btn' target='_blank' rel=\"noopener noreferrer\" href='https://www.google.com'>Vezi jobul</a>\r\n      </section>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Job;","import React, { useEffect } from 'react';\r\nimport './serp.style.scss';\r\n\r\nimport Logo from '../../components/logo/logo.component';\r\nimport Search from '../../components/search/search.component';\r\nimport Results from '../../components/results-count/results-count.component';\r\nimport Job from '../../components/job/job.component';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getNewJobs, updateQuerySearched, updateTotal } from '../../state/slices/results.slice';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { handleClick } from '../../helpers/handleClick';\r\nimport { baseUrl } from '../../axios/baseUrl';\r\nimport { createQueryString } from '../../helpers/createQueryString';\r\nimport { mapJobsResults } from '../../helpers/mapJobsResults';\r\nimport { updateQ } from '../../state/slices/queries.slice';\r\n\r\nconst Serp = () => {\r\n  const navigate = useNavigate();\r\n  const searchParams = useSearchParams()[0];\r\n  const dispatch = useDispatch();\r\n\r\n  const querySearched = useSelector(state => state.results.querySearched)\r\n  const count = useSelector(state => state.results.total);\r\n  const queries = useSelector(state => state.queries);\r\n  const jobs = useSelector(state => state.results.jobs);\r\n  const content = jobs.map((job, idx) => <Job key={idx} {...job} />)\r\n\r\n  const city = searchParams.get('city');\r\n  const company = searchParams.get('company');\r\n  const country = searchParams.get('country');\r\n  const page = searchParams.get('page');\r\n  const q = searchParams.get('q');\r\n\r\n  const paramsQuery = { city, company, country, page, q }\r\n\r\n  useEffect(() => {\r\n    dispatch(updateQuerySearched(q));\r\n    dispatch(updateQ(q))\r\n    baseUrl.get(`search/?${createQueryString(paramsQuery)}`)\r\n      .then((response) => {\r\n        const jobsMapped = mapJobsResults(response.data.response.docs);\r\n        dispatch(updateTotal(response.data.response.numFound));\r\n        dispatch(getNewJobs(jobsMapped));\r\n      })\r\n  }, [city, company, country, page, q]);\r\n\r\n  const onEnterPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleClick(queries, navigate);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className='serp'>\r\n      <header onKeyDown={onEnterPress} >\r\n        <Logo />\r\n        <Search onClickPress={() => handleClick(queries, navigate)} />\r\n      </header>\r\n      <main className='serp__content'>\r\n        <aside className='serp__content__aside'>\r\n          this is some menu\r\n        </aside>\r\n        <section className='serp__content__results'>\r\n          <Results count={count} search={querySearched} />\r\n          {content}\r\n        </section>\r\n      </main>\r\n    </section>\r\n  )\r\n};\r\n\r\nexport default Serp;","export const mapJobsResults = (jobs) => {\r\n  const jobsMapped = [];\r\n\r\n  if (jobs.length) {\r\n    jobs.forEach(job => jobsMapped.push({\r\n      company: job.company ? job.company[0] : 'nespecificat',\r\n      city: job.city ? job.city[0] : 'nespecificat',\r\n      title: job.job_title ? job.job_title[0] : 'nespecificat',\r\n      link: job.job_link ? job.job_link[0] : 'nespecificat',\r\n      isNew: false\r\n    }))\r\n  }\r\n\r\n  return jobsMapped;\r\n}","import React from 'react';\r\nimport './404.style.scss';\r\n\r\nconst Error404 = () => (\r\n  <section>\r\n    Cineva o sa aiba probleme!!!\r\n  </section>\r\n);\r\n\r\nexport default Error404;","import React from 'react';\r\nimport './App.scss';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport LandingPage from './pages/landing/landing.component';\r\nimport Serp from './pages/serp/serp.component';\r\nimport Error404 from './pages/404/404.component';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<LandingPage />} />\r\n        <Route path=\"rezultate\" element={<Serp />} />\r\n        <Route path=\"*\" element={<Error404 />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport queriesSlice from './slices/queries.slice';\r\nimport resultsSlice from './slices/results.slice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    queries: queriesSlice,\r\n    results: resultsSlice\r\n  }\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './state/store';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}